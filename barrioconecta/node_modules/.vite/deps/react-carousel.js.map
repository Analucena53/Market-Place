{
  "version": 3,
  "sources": ["../../range/lib/range.js", "../../debounce/index.js", "../../react-carousel/src/Carousel.js"],
  "sourcesContent": ["\"use strict\";\n\n// Returns an array of integers starting at a, incrementing by step, ending before b.\n//\n// Example:\n//\n// > var range = require(\"range\").range;\n// > range(0, 10);\n// [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nfunction range(a, b, step) {\n  if (arguments.length === 1) {\n      b = a;\n      a = 0;\n  }\n\n  step = step || 1;\n\n  var x, r = [];\n\n  for (x = a; (b - x) * step > 0; x += step) {\n    r.push(x);\n  }\n\n  return r;\n}\n\nexports.range = range;\n", "/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n", "// @flow\n\nimport React, {\n  Component\n} from 'react';\nimport {\n  range\n} from 'range';\nimport debounce from 'debounce';\n\ntype DirectionType = 'previous' | 'next';\n\ntype ComponentStateType = {|\n  firstVisibleIndex: number,\n  maxWidth: number\n|};\n\n/**\n * Calculates the maximum number of items that can fit the container\n * without overflowing.\n */\nexport const getMaximumAccomodableItemCount = (fullWidth: number, elementWidth: number, elementMargin: number): number => {\n  return Math.floor(fullWidth / (elementWidth + elementMargin));\n};\n\nexport const isPrevButtonVisible = (firstVisibleIndex: number): boolean => {\n  return firstVisibleIndex > 0;\n};\n\nexport const isNextButtonVisible = (totalItems: number, firstVisibleIndex: number, visibleItemCount: number): boolean => {\n  return firstVisibleIndex < totalItems - visibleItemCount;\n};\n\nexport const getIndexToScrollTo = (\n  direction: DirectionType,\n  totalItems: number,\n  visibleItemCount: number,\n  firstVisibleIndex: number,\n  scrollStepDistance: number\n): number => {\n  let index;\n\n  const itemsBeyondVisible = totalItems - firstVisibleIndex - visibleItemCount;\n  const itemsBehindVisible = firstVisibleIndex;\n\n  if (direction === 'next') {\n    index = firstVisibleIndex + (itemsBeyondVisible > scrollStepDistance ? scrollStepDistance : itemsBeyondVisible);\n  } else if (direction === 'previous') {\n    index = firstVisibleIndex - (itemsBehindVisible > scrollStepDistance ? scrollStepDistance : itemsBehindVisible);\n  } else {\n    throw new Error('Unexpected state.');\n  }\n\n  return index;\n};\n\nexport const getVisibleItemCount = (\n  totalItems: number,\n  firstVisibleIndex: number,\n  itemWidth: number,\n  itemMargin: number,\n  controlWidth: number,\n  maxWidth: number\n) => {\n  let availableWidth;\n  let visibleItemCount;\n\n  availableWidth = maxWidth + itemMargin;\n\n  const prevButtonVisible = isPrevButtonVisible(firstVisibleIndex);\n\n  if (prevButtonVisible) {\n    availableWidth -= controlWidth;\n  }\n\n  visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n\n  const nextButtonVisible = isNextButtonVisible(totalItems, firstVisibleIndex, visibleItemCount);\n\n  if (nextButtonVisible) {\n    availableWidth -= controlWidth;\n\n    visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n  }\n\n  return visibleItemCount;\n};\n\ntype PropsType = {|\n  +children: *,\n  +controlWidth: number,\n  +firstVisibleIndex: number,\n  +itemMargin: number,\n  +itemWidth: number,\n  +onItemScroll: (index: number) => void,\n  +scrollStepDistance: number,\n  +style: {\n    [key: string]: string\n  }\n|};\n\nclass Carousel extends Component<PropsType, ComponentStateType> {\n  resizeEventListener: () => void;\n  wrapperElement: HTMLElement;\n\n  static defaultProps = {\n    controlWidth: 30,\n    firstVisibleIndex: 0,\n    itemMargin: 0,\n    itemWidth: 50,\n    onItemScroll: () => {},\n    scrollStepDistance: null\n  };\n\n  constructor (props: PropsType) {\n    super(props);\n\n    this.state = {\n      firstVisibleIndex: props.firstVisibleIndex || 0,\n      maxWidth: 0\n    };\n\n    this.resizeEventListener = debounce(() => {\n      this.setState({\n        maxWidth: this.wrapperElement.offsetWidth\n      });\n    }, 100);\n  }\n\n  componentDidMount () {\n    if (!this.wrapperElement) {\n      throw new Error('Unexpected state.');\n    }\n\n    const maxWidth = this.wrapperElement.offsetWidth;\n\n    this.setState({\n      maxWidth\n    });\n\n    window.addEventListener('resize', this.resizeEventListener);\n  }\n\n  componentWillUnmount () {\n    this.resizeEventListener.clear();\n\n    window.removeEventListener('resize', this.resizeEventListener);\n  }\n\n  handleScrollToDirection = (direction: DirectionType, visibleItemCount: number): void => {\n    const index = getIndexToScrollTo(\n      direction,\n      this.props.children.length,\n      visibleItemCount,\n      this.state.firstVisibleIndex,\n      this.props.scrollStepDistance || visibleItemCount\n    );\n\n    this.props.onItemScroll(index);\n\n    this.setState({\n      firstVisibleIndex: index\n    });\n  };\n\n  getItemElement = (item: React$Element<any>, key: string, index: number, visibleItemCount: number): React$Element<any> | null => {\n    const visibleItemIndeces = range(this.state.firstVisibleIndex, visibleItemCount + this.state.firstVisibleIndex);\n    const isVisible = visibleItemIndeces.includes(index);\n    const isLastAmongVisible = visibleItemIndeces.length === visibleItemIndeces.indexOf(index) + 1;\n\n    if (!isVisible) {\n      return null;\n    }\n\n    return <li\n      key={key}\n      style={{\n        boxSizing: 'border-box',\n        display: 'flex',\n        listStyleType: 'none',\n        marginRight: isLastAmongVisible ? 0 : this.props.itemMargin,\n        width: this.props.itemWidth\n      }}\n    >\n      {item}\n    </li>;\n  };\n\n  captureWrapperElementReference = (element: *) => {\n    if (element) {\n      this.wrapperElement = element;\n    }\n  };\n\n  render () {\n    const {\n      controlWidth,\n      itemMargin,\n      children,\n      itemWidth\n    } = this.props;\n    const items = children;\n    const itemCount = items.length;\n    const visibleItemCount = getVisibleItemCount(itemCount, this.state.firstVisibleIndex, itemWidth, itemMargin, controlWidth, this.state.maxWidth);\n    const prevButtonVisible = visibleItemCount === 0 ? false : isPrevButtonVisible(this.state.firstVisibleIndex);\n    const nextButtonVisible = visibleItemCount === 0 ? false : isNextButtonVisible(itemCount, this.state.firstVisibleIndex, visibleItemCount);\n\n    const carouselStyle = {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      flexGrow: 1,\n      overflow: 'hidden',\n      ...this.props.style\n    };\n\n    const navigationButtonStyle = {\n      boxSizing: 'border-box',\n      height: 'inherit',\n      margin: 0,\n      padding: 0,\n      width: controlWidth\n    };\n\n    const navigationButtonPreviousStyle = {\n      ...navigationButtonStyle,\n      display: prevButtonVisible ? 'flex' : 'none'\n    };\n\n    const navigationButtonNextStyle = {\n      ...navigationButtonStyle,\n      display: nextButtonVisible ? 'flex' : 'none'\n    };\n\n    const bodyStyle = {\n      display: 'flex',\n      flexFlow: 'row wrap',\n      margin: 0,\n      padding: 0\n    };\n\n    return <div\n      className='react-carousel'\n      ref={this.captureWrapperElementReference}\n      style={carouselStyle}\n    >\n      <div\n        className='react-carousel__navigation-button react-carousel__navigation-button--previous'\n        onClick={() => {\n          this.handleScrollToDirection('previous', visibleItemCount);\n        }}\n        style={navigationButtonPreviousStyle}\n      />\n      <ul style={bodyStyle}>\n        {items.map((item, index) => {\n          if (!item.key) {\n            throw new Error('react-carousel children must have a \"key\" property. https://facebook.github.io/react/docs/lists-and-keys.html');\n          }\n\n          return this.getItemElement(item, item.key, index, visibleItemCount);\n        })}\n      </ul>\n      <div\n        className='react-carousel__navigation-button react-carousel__navigation-button--next'\n        onClick={() => {\n          this.handleScrollToDirection('next', visibleItemCount);\n        }}\n        style={navigationButtonNextStyle}\n      />\n    </div>;\n  }\n}\n\nexport default Carousel;\n"],
  "mappings": "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",
  "names": ["getMaximumAccomodableItemCount", "fullWidth", "elementWidth", "elementMargin", "Math", "floor", "isPrevButtonVisible", "firstVisibleIndex", "isNextButtonVisible", "totalItems", "visibleItemCount", "getIndexToScrollTo", "direction", "scrollStepDistance", "index", "itemsBeyondVisible", "itemsBehindVisible", "Error", "getVisibleItemCount", "itemWidth", "itemMargin", "controlWidth", "maxWidth", "availableWidth", "prevButtonVisible", "nextButtonVisible", "Carousel", "props", "handleScrollToDirection", "children", "length", "state", "onItemScroll", "setState", "getItemElement", "item", "key", "visibleItemIndeces", "isVisible", "includes", "isLastAmongVisible", "indexOf", "boxSizing", "display", "listStyleType", "marginRight", "width", "captureWrapperElementReference", "element", "wrapperElement", "resizeEventListener", "offsetWidth", "window", "addEventListener", "clear", "removeEventListener", "items", "itemCount", "carouselStyle", "flexFlow", "flexGrow", "overflow", "style", "navigationButtonStyle", "height", "margin", "padding", "navigationButtonPreviousStyle", "navigationButtonNextStyle", "bodyStyle", "map", "defaultProps"]
}
